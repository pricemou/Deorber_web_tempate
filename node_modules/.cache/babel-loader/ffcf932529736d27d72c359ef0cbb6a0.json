{"ast":null,"code":"var _jsxFileName = \"/home/claude97/Documents/REACT_JS/vim_vim/src/components/Todoform.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todoform extends Component {\n  onClick(e) {\n    e.preventDefault();\n    const txt = this.todoTille.value;\n    this.onNewTodo({});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: input => this.todoTille = input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onClick.bind(this),\n        children: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Todoform;","map":{"version":3,"sources":["/home/claude97/Documents/REACT_JS/vim_vim/src/components/Todoform.js"],"names":["React","Component","Todoform","onClick","e","preventDefault","txt","todoTille","value","onNewTodo","render","input","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,OAAO,CAACC,CAAD,EAAG;AACNA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,KAAKC,SAAL,CAAeC,KAA3B;AACA,SAAKC,SAAL,CAAe,EAAf;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAGC,KAAD,IAAW,KAAKJ,SAAL,GAAiBI;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKR,OAAL,CAAaS,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhB4B;;AAmBjC,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Todoform extends Component {\n    onClick(e){\n        e.preventDefault();\n        const txt = this.todoTille.value;\n        this.onNewTodo({\n            \n        });\n    }\n\n    render() {\n        return (\n            <div className=\"form\">\n                <input type=\"text\" ref={(input) => this.todoTille = input} />\n                <button onClick={this.onClick.bind(this)}>button</button>\n            </div>\n        );\n    }\n}\n\nexport default Todoform\n"]},"metadata":{},"sourceType":"module"}